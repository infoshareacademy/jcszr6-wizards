// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wizards.Repository;

#nullable disable

namespace Wizards.Repository.Migrations
{
    [DbContext(typeof(WizardsContext))]
    [Migration("20220710175202_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Wizards.Core.Model.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AttributesId")
                        .HasColumnType("int");

                    b.Property<int>("AvatarImageNumber")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Profession")
                        .HasColumnType("int");

                    b.Property<int>("StatisticsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttributesId")
                        .IsUnique();

                    b.HasIndex("NickName")
                        .IsUnique();

                    b.HasIndex("PlayerId");

                    b.HasIndex("StatisticsId")
                        .IsUnique();

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("Wizards.Core.Model.HeroAttributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CurrentHealth")
                        .HasColumnType("int");

                    b.Property<int>("DailyRewardEnergy")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<int>("MaxHealth")
                        .HasColumnType("int");

                    b.Property<int>("Precision")
                        .HasColumnType("int");

                    b.Property<int>("Reflex")
                        .HasColumnType("int");

                    b.Property<int>("Specialization")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HeroAttributes");
                });

            modelBuilder.Entity("Wizards.Core.Model.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AttributesId")
                        .HasColumnType("int");

                    b.Property<int>("BuyPrice")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Restriction")
                        .HasColumnType("int");

                    b.Property<int>("SellPrice")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttributesId")
                        .IsUnique();

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Wizards.Core.Model.ItemAttributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CurrentHealth")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("Defense")
                        .HasColumnType("int");

                    b.Property<double>("ItemEndurance")
                        .HasColumnType("float");

                    b.Property<int>("MaxHealth")
                        .HasColumnType("int");

                    b.Property<int>("Precision")
                        .HasColumnType("int");

                    b.Property<int>("Reflex")
                        .HasColumnType("int");

                    b.Property<int>("Specialization")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ItemAttributes");
                });

            modelBuilder.Entity("Wizards.Core.Model.ManyToManyTables.HeroItem", b =>
                {
                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("InUse")
                        .HasColumnType("bit");

                    b.HasKey("HeroId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("HeroItems");
                });

            modelBuilder.Entity("Wizards.Core.Model.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Wizards.Core.Model.Statistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("RankPoints")
                        .HasColumnType("int");

                    b.Property<int>("TotalMatchLoose")
                        .HasColumnType("int");

                    b.Property<int>("TotalMatchPlayed")
                        .HasColumnType("int");

                    b.Property<int>("TotalMatchWin")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("Wizards.Core.Model.Hero", b =>
                {
                    b.HasOne("Wizards.Core.Model.HeroAttributes", "Attributes")
                        .WithOne("Hero")
                        .HasForeignKey("Wizards.Core.Model.Hero", "AttributesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wizards.Core.Model.Player", "Player")
                        .WithMany("Heroes")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wizards.Core.Model.Statistics", "Statistics")
                        .WithOne("Hero")
                        .HasForeignKey("Wizards.Core.Model.Hero", "StatisticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attributes");

                    b.Navigation("Player");

                    b.Navigation("Statistics");
                });

            modelBuilder.Entity("Wizards.Core.Model.Item", b =>
                {
                    b.HasOne("Wizards.Core.Model.ItemAttributes", "Attributes")
                        .WithOne("Item")
                        .HasForeignKey("Wizards.Core.Model.Item", "AttributesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("Wizards.Core.Model.ManyToManyTables.HeroItem", b =>
                {
                    b.HasOne("Wizards.Core.Model.Hero", "Hero")
                        .WithMany("Inventory")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wizards.Core.Model.Item", "Item")
                        .WithMany("Heroes")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Wizards.Core.Model.Hero", b =>
                {
                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("Wizards.Core.Model.HeroAttributes", b =>
                {
                    b.Navigation("Hero")
                        .IsRequired();
                });

            modelBuilder.Entity("Wizards.Core.Model.Item", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Wizards.Core.Model.ItemAttributes", b =>
                {
                    b.Navigation("Item")
                        .IsRequired();
                });

            modelBuilder.Entity("Wizards.Core.Model.Player", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("Wizards.Core.Model.Statistics", b =>
                {
                    b.Navigation("Hero")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
