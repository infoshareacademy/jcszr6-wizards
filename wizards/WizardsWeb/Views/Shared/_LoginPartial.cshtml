@using Microsoft.AspNetCore.Identity
@using Wizards.Core.Model.UserModels
@using Wizards.Core.Model.UserModels.Enums

@inject SignInManager<Player> SignInManager
@inject UserManager<Player> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item btn-group">
            @if (User.IsInRole(UserRoles.Admin.ToString()))
            {
                <a id="manage" class="gbtn gbtn-technical" asp-controller="Player" asp-action="Details">
                    @UserManager.GetUserName(User) (Admin)
                </a>
            }
            else if (User.IsInRole(UserRoles.Moderator.ToString()))
            {
                <a id="manage" class="gbtn gbtn-technical" asp-controller="Player" asp-action="Details">
                    @UserManager.GetUserName(User) (Moderator)
                </a>
            }
            else
            {
                <a id="manage" class="gbtn gbtn-magical" asp-controller="Player" asp-action="Details">
                    @UserManager.GetUserName(User)
                </a>
            }
            <a id="logout" class="gbtn gbtn-danger" asp-controller="Player" asp-action="Logout">Logout</a>
        </li>
    }
    else
    {
        <li class="nav-item btn-group">
            <a class="gbtn gbtn-accept" id="login" asp-controller="Player" asp-action="Login">Login</a>
            <a class="gbtn gbtn-action" id="register" asp-controller="Player" asp-action="Create">Register</a>
        </li>
    }
</ul>